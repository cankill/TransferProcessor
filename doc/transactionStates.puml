@startuml
skinparam dpi 300
!define success(x) <color:green> x</color>
!define failure(x) <color:red> x</color>
!define implements(x) :<color:darksalmon> x</color>
' other tags available:
' <i></i>
' <back:COLOR></color>, where color is a color name or html color code
' (#FFAACC)
' see: http://plantuml.com/classes.html#More
hide methods
hide stereotypes

state transfer_fork <<fork>>
state transfer_join_succ <<join>>
state transfer_join_fail <<join>>
state rollback_fork <<fork>>
state rollback_join <<join>>
state commit_fork <<fork>>
state commit_join <<join>>
state CommitProcessor: Get sub-transactions\nrun Commit for each
state RollbackProcessor: Get sub-transactions\nrun Rollback for each
state RollbackPostProcessor: Check all sub-transactions status\nrollback main transaction

[*] --> TransferProcessor: success(TransferCommand)implements(HasFrom)
TransferProcessor --> transfer_fork
transfer_fork --> CreditProcessor : success(CreditCommand)implements(HasFrom)
transfer_fork --> DebitProcessor : success(DebitCommand)implements(HasFrom)

CreditProcessor --> transfer_join_succ: success(CommitCommand)implements(HasParentId)
DebitProcessor --> transfer_join_succ: success(CommitCommand)implements(HasParentId)

transfer_join_succ --> CommitProcessor
CommitProcessor --> commit_fork
commit_fork --> CommitDebitProcessor: success(CommitDebitCommand)implements(HasFrom)
commit_fork --> CommitCreditProcessor: success(CommitCreditCommand)implements(HasFrom)
CommitDebitProcessor --> commit_join: success(SuccessCommitCommand)implements(HasParentId)
CommitCreditProcessor --> commit_join: success(SuccessCommitCommand)implements(HasParentId)
commit_join --> CommitPostProcessor
CommitPostProcessor --> [*]: success(null)

transfer_join_fail --> RollbackProcessor
RollbackProcessor --> rollback_fork
rollback_fork --> RollbackDebitProcessor:  success(RollbackDebitCommand)implements(HasFrom)
rollback_fork --> RollbackCreditProcessor: success(RollbackCreditCommand)implements(HasFrom)

RollbackDebitProcessor --> rollback_join: success(SuccessRollbackCommand)implements(HasParentId)
RollbackCreditProcessor --> rollback_join: success(SuccessRollbackCommand)implements(HasParentId)

rollback_join --> RollbackPostProcessor
RollbackPostProcessor --> [*]: success(null)

' Fail path
'TransferProcessor -> [*]: failure(null)
CreditProcessor --> transfer_join_fail: failure(RollbackCommand)implements(HasParentId)
DebitProcessor --> transfer_join_fail: failure(RollbackCommand)implements(HasParentId)
'
'CommitProcessor --> transfer_join_fail: failure(RollbackCommand)
'CommitCreditProcessor --> transfer_join_fail: failure(RollbackCommand)
'CommitDebitProcessor --> transfer_join_fail: failure(RollbackCommand)
'CommitPostProcessor --> CommitPostProcessor: failure(RetryCommand)
'
'RollbackProcessor -> RollbackProcessor: failure(RetryCommand)
'RollbackCreditProcessor -> RollbackCreditProcessor: failure(RetryCommand)
'RollbackDebitProcessor -> RollbackDebitProcessor: failure(RetryCommand)
'RollbackPostProcessor -> RollbackPostProcessor: failure(RetryCommand)
@enduml
